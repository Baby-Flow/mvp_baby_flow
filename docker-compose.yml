version: '3.8'

services:
  postgres:
    image: postgres:15
    container_name: babyflow_db
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./shared/database/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - babyflow-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 5s
      timeout: 5s
      retries: 5

  activity-service:
    build: ./activity-service
    container_name: babyflow_activity
    ports:
      - "8003:8003"
    environment:
      DATABASE_URL: postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - babyflow-network
    restart: unless-stopped

  nlp-service:
    build: ./nlp-service
    container_name: babyflow_nlp
    ports:
      - "8002:8002"
    environment:
      ANTHROPIC_API_KEY: ${ANTHROPIC_API_KEY}
      ACTIVITY_SERVICE_URL: http://activity-service:8003
    networks:
      - babyflow-network
    restart: unless-stopped

  telegram-service:
    build: ./telegram-service
    container_name: babyflow_telegram
    environment:
      TELEGRAM_BOT_TOKEN: ${TELEGRAM_BOT_TOKEN}
      NLP_SERVICE_URL: http://nlp-service:8002
      ACTIVITY_SERVICE_URL: http://activity-service:8003
    depends_on:
      - nlp-service
      - activity-service
    networks:
      - babyflow-network
    restart: unless-stopped

volumes:
  postgres_data:

networks:
  babyflow-network:
    driver: bridge